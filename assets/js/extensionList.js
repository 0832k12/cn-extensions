const extensionsList = [
    //163_music
    "163_music:搜索音乐 [Let's live]:: reporter #4d4d4f ",
    "163_music:获取音乐url [1952657896]:: reporter #4d4d4f",
    "163_music:获取[1952657896]的歌词:: reporter #4d4d4f",
    "163_music:获取[1952657896]的封面::reporter #4d4d4f",
    "163_music:从[https://example.com/music.mp3] 播放音乐 ::command #4d4d4f",
    "163_music:获取电台节目 [350080224]::reporter #4d4d4f",
    "163_music:电台音乐ID转音乐ID [2521984465]::reporter #4d4d4f ",
    "163_music:▶️ 播放音乐::command #4d4d4f",
    "163_music:⏸ 暂停音乐::command #4d4d4f",
    "163_music:⏹ 停止音乐::command #4d4d4f",
    "163_music:跳转到时间[0] 秒 ::command #4d4d4f",
    "163_music:将音量调到 [100]::command #4d4d4f",
    "163_music:是否正在播放音乐?:: boolean #4d4d4f",
    "163_music:音乐播放时间::reporter #4d4d4f",
    "163_music:音乐总时长::reporter #4d4d4f",
    "163_music:[歌词] 在 [时间]时显示:: reporter #4d4d4f",
    "163_music:[歌词] 在 [时间] 是第几行:: reporter #4d4d4f",
    //Consoles
    "Consoles:清空控制台 :: command #808080",
    "Consoles:信息 [Information]:: command #808080",
    "Consoles:日志 [Journal]:: command #808080",
    "Consoles:警告 [Warning]:: command #808080",
    "Consoles:错误 [Error] :: command #808080",
    "Consoles:调试 [debug] :: command #808080",
    "Consoles:创建一个名为[group]的分组:: command #808080",
    "Consoles:创建一个名为[group]的折叠分组 :: command #808080",
    "Consoles:退出当前分组 :: command #808080",
    "Consoles:启动一个名为[Time]的计时器:: command #808080",
    "Consoles:打印名为[Time]的计时器所运行的时间:: command #808080",
    "Consoles:结束名为[Time]的计时器并以打印从开始到结束所用的时间 :: command #808080",
    //Encoding
    "Encoding:将 [SIPC]以 [Base64]编码 ::reporter #6495ed",
    "Encoding:将 [U0lQQw==] 以 [Base64]解码::reporter #6495ed",
    "Encoding:将 [SIPC]以MD5加密:: reporter #6495ed",
    "Encoding:将字符[A]转换为[UNICODE]:: reporter #6495ed",
    "Encoding:[65]对应的[UNICODE]字符 ::reporter #6495ed",
    "Encoding:随机生成[8]位字符串 ::reporter #6495ed",
    "Encoding:使用[1234567890]随机生成[8]位字符串:: reporter #6495ed",
    //Recording
    "Recording:开始录音:: command #696969",
    "Recording:停止录音:: command #696969",
    "Recording:停止录音并用[recording.wav]作为文件名下载:: command #696969",
    "Recording:录音?:: boolean #696969",
    //Temporaryvariables
    "Temporaryvariables:将临时变量[i]设为[1] :: command #566270",
    "Temporaryvariables:删除临时变量[i] :: command #566270",
    "Temporaryvariables:读取临时变量[i]的值 :: reporter #566270",
    "Temporaryvariables:临时变量[i]是否存在? :: boolean #566270",
    //Time
    "Time:当前时间戳 :: reporter #ff8000",
    "Time:当前时区:: reporter #ff8000",
    "Time:从[1145141980000]提取[年] :: reporter #ff8000",
    "Time:将[1145141980000]转换为日期时间:: reporter #ff8000",
    "Time:将 [2006-04-16 06:59:40]转换为时间戳:: reporter #ff8000",
    //WebData
    "WebData:将此项目命名为[i] :: command #001999",
    "WebData:将 [1] 命名为[i_]保存到云端数据库 :: command #001999",
    "WebData:删除云端数据库中的[i] :: command #001999",
    "WebData:连接到互联网了吗?:: boolean #001999",
    "WebData:从云端数据库中读取[i]的值 ::reporter #001999",
    "WebData:云端数据库是否保存了[i]?:: boolean #001999",
    //eval
    "0832eval:执行Javascript [1+1] :: reporter #f54242",
    //list
    "0832list:获取列表 [rx] :: reporter #f54242",
    "0832list:设置列表 [rx] 为 [1,2] :: command #f54242",
    //rxFS
    "0832rxfs:新建 [/rxFS/example]:: command #192d50",
    "0832rxfs:设置 [/rxFS/example] 为 [rxFS is good!]:: command #192d50",
    "0832rxfs:将 [/rxFS/example] 的位置更改为 [/rxFS/example]:: command #192d50",
    "0832rxfs:删除 [/rxFS/example]:: command #192d50",
    "0832rxfs:从网络加载 [https://0832k12.github.io/rxFS/hello.txt]:: reporter #192d50",
    "0832rxfs:打开 [/rxFS/example]:: reporter #192d50",
    "0832rxfs:清空文件系统:: command #192d50",
    "0832rxfs:从 [/rxFS/] 导入文件系统:: command #192d50",
    "0832rxfs:导出文件系统:: reporter #192d50",
    "0832rxfs:列出 [/rxFS/] 下的所有文件:: reporter #192d50",
    "0832rxfs:搜索 [/rxFS/example]:: reporter #192d50",
    //Animated-Text
    "Animated-Text:显示文字 [欢迎来到我的项目!] :: pen command #0fbd8c",
    "Animated-Text:[打字机 v] 效果显示文字 [让我们开始吧!] :: command #0fbd8c",
    "Animated-Text:显示角色 ::command #0fbd8c",
    "Animated-Text:将字体设置为[Sans Serif v] ::command #0fbd8c",
    "Animated-Text:将颜色设置为[#a56afd] :: command #0fbd8c",
    "Animated-Text:将宽度设置为[200] 对齐方式[向左]:: command #0fbd8c",
    "Animated-Text:正在显示文本?:: boolean #0fbd8c",
    "Animated-Text:文本[字体 v] ::reporter #0fbd8c ::disableMonitor",
    //post-process
    "Post-Processing:change effect to [glitch v] :: command #0fbd8c",
    "Post-Processing: Glitch Amplitude:(1)% ::command #0fbd8c",
    "Post-Processing:Dispersion Amplitude:(1)% :: command #0fbd8c",
    "Post-Processing:Gray Color: [#FFFFFF]:: command #0fbd8c",
    "Post-Processing:Pointillism Threshold: (70)%:: command #0fbd8c",
    "Post-Processing:Clip Start: X:(0),Y:(0) To: X:(1),Y:(1) :: command #0fbd8c",
    "Post-Processing:redraw post-process:: command #0fbd8c",
    "Post-Processing:Post-Process Mode ::reporter #0fbd8c",
    "Post-Processing:uniform2fv Name:[_BlockSize] Value:(8) (8) :: command #0fbd8c",
    "Post-Processing:uniform1f Name:[_Time] Value:(0) ::command #0fbd8c",
    //split
    "Split: Use [-] to split [Hello-world!] and extract data [1] ::reporter #0fbd8c",
    //ShovelUtils
    "ShovelUtils:获取列表 [MyList] :: reporter #f54242",
    "ShovelUtils:设置列表 [MyList] 为 [1,2] :: command #f54242",
    "ShovelUtils:从 [https://extensions.turbowarp.org/dango.png] 导入图像 命名为 [Dango]:: command #f54242",
    "ShovelUtils:从 [Link or data uri here] 导入角色 :: command #f54242",
    "ShovelUtils:从 [https://extensions.turbowarp.org/meow.mp3] 导入声音 命名为 [Meow] :: command #f54242",
    "ShovelUtils:从 [https://theshovel.github.io/Bullet-Hell/Bullet%20Hell] 导入项目 :: command #f54242",
    "ShovelUtils:从 [https://extensions.turbowarp.org/utilities.js] 中加载扩展 :: command #f54242",
    "ShovelUtils:重新启动项目:: command #f54242",
    "ShovelUtils:删除角色 [Sprite1]:: command #f54242",
    "ShovelUtils:Fps :: reporter #f54242",
    //bitwiseoper
    "bitwiseoper: (1) & (1) :: reporter #0fbd8c",
    "bitwiseoper: (1) | (0) :: reporter #0fbd8c",
    "bitwiseoper: (1) ^ (0) :: reporter #0fbd8c",
    "bitwiseoper: ~ (0) :: reporter #0fbd8c",
    "bitwiseoper: (2) ⩤ (1) :: reporter #0fbd8c",
    "bitwiseoper: (4) ⩥ (1) :: reporter #0fbd8c",
    //mathandgeom
    "mathandgeom:运算 | 计算常量 [ PI]:: reporter #ff8829",
    "mathandgeom:运算 | pow [11]的[4]次方:: reporter #ff8829",
    "mathandgeom:运算 | round[1.135]到第[2]位:: reporter #ff8829",
    "mathandgeom:运算 | 质数?[2]:: boolean #ff8829",
    "mathandgeom:运算 | 最大公因数[2]和[4] ::reporter #ff8829",
    "mathandgeom:运算 | 最小公倍数[2]和[4] ::reporter #ff8829",
    "mathandgeom:运算 | 将10进制的[114]转换成16进制:: reporter #ff8829",
    "mathandgeom:运算 | [10]的阶乘:: reporter #ff8829",
    "mathandgeom:运算 | 1到[100]的和:: reporter #ff8829",
    "mathandgeom:运算 | 1到1/[10]的和:: reporter #ff8829",
    "mathandgeom:运算 | 方程[1]x^2+[2]x+[-3]=0的根:: reporter #ff8829",
    "mathandgeom:运算 | [8]的[3]次根:: reporter #ff8829",
    "mathandgeom:运算 | 用二分从[1]到[10]猜到[1]的次数:: reporter #ff8829",
    "mathandgeom:图形 | x[0]y[0]到x[1]y[1]的距离 ::reporter #ff8829",
    "mathandgeom:图形 | x[0]y[0]z[0]到x[1]y[1]z[1]的距离:: reporter #ff8829",
    "mathandgeom:图形 | x[0]y[0] 朝向 x[1]y[1] 的方向:: reporter #ff8829",
    "mathandgeom:图形 | 从x[-1]y[1]到x[1]y[-1] 的线段 和 从x[1]y[1]到x[-1]y[-1] 的线段是否相交:: boolean #ff8829",
    "mathandgeom:图形 | 相交的坐标 ::reporter #ff8829",
    "mathandgeom:图形 | 位于x[5]y[0]的点是否在 位于x[0]y[0] ,半径为[5]的圆里?:: reporter #ff8829",
    //numeration
    "numeration: 科学记数法 | 将十进制数 [114514] 转换为科学记数法 :: reporter #0fbd8c",
    "numeration: 科学记数法 | 将科学记数法 [1.14514e5] 转换为十进制数:: reporter #0fbd8c",
    "numeration: 字母记数法 | 将十进制数 [114514] 转换为字母计数法:: reporter #0fbd8c",
    "numeration: 科学记数法 | 将字母记数法 [GNKK] 转换为十进制数:: reporter #0fbd8c",
    //strmani
    "strmani:反转 [STR] :: reporter #53aae7", "strmani: [STR] 的长度 :: reporter #53aae7",
    "strmani: [STR] 是回文字符串吗?:: boolean #53aae7", "strmani:从 [STR] 的第 [NUM] 个字符开始找到第一个 [STR2] 出现的位置 :: reporter #53aae7",
    "strmani:从 [STR] 的第 [NUM] 个字符开始找到最后一个 [STR2] 出现的位置 :: reporter #53aae7",
    "strmani:截取 [STR] 第 [NUM1] 到 [NUM2] 个字符:: reporter #53aae7",
    "strmani:截取 [STR] 从 [NUM] 开始的内容 :: reporter #53aae7",
    "strmani:截取从 [STR] 的第 [NUM1] 个字符开始长度为 [NUM2] 的子字符串:: reporter #53aae7",
    "strmani:把 [STR] 中的第一个 [STR2] 替换成 [STR3] :: reporter #53aae7",
    //json
    "skyhigh173JSON:JSON [json] 是否有效 :: boolean #3271D0",
    "skyhigh173JSON: [json] 是否为 [JSON v] :: boolean #3271D0",
    "skyhigh173JSON:在 [json] 中获取所有的[键 v] :: reporter #3271D0",
    "skyhigh173JSON:空白 [JSON v] :: reporter #3271D0",
    "skyhigh173JSON: [json] 含有键值[key]? :: boolean #3271D0",
    "skyhigh173JSON:[json] 含有数据[value]? :: boolean #3271D0",
    "skyhigh173JSON:[json1]= [json2] :: boolean #3271D0",
    "skyhigh173JSON: [json1] ≠ [json2] :: boolean #3271D0",
    "skyhigh173JSON:JSON [json] 的长度 :: reporter #3271D0",
    "skyhigh173JSON:JSON [json] 获取[key] :: reporter #3271D0",
    "skyhigh173JSON:JSON [json] 设置[key]的数据为[new value] :: reporter #3271D0",
    "skyhigh173JSON:JSON [json] 删除[key2] :: reporter #3271D0",
    "skyhigh173JSON:数组 [json] 的长度:: reporter #3271D0",
    "skyhigh173JSON:数组 [json] 的第[1]项 :: reporter #3271D0",
    "skyhigh173JSON:在数组 [json] 添加[TurboWarp] :: reporter #3271D0",
    "skyhigh173JSON:替换数组 [json] 的第[2]项为[fav] :: reporter #3271D0",
    "skyhigh173JSON:数组 [json] 插入[fav] 到第[2]项 :: reporter #3271D0",
    "skyhigh173JSON:在数组 [json] 中删除第[2]项 :: reporter #3271D0",
    "skyhigh173JSON:在数组 [json] 中删除所有的[a] :: reporter #3271D0",
    "skyhigh173JSON:数组 [json] 中第一个[scratch] 的编号:: reporter #3271D0",
    "skyhigh173JSON:使用 [json] 构造数组:: reporter #3271D0",
    "skyhigh173JSON:在数组 [json] 中从第[2]项到第[3]项:: reporter #3271D0",
    "skyhigh173JSON:反转数组 [json]:: reporter #3271D0",
    "skyhigh173JSON:展平数组 [json] 到第[2]层:: reporter #3271D0",
    "skyhigh173JSON:连接数组 [json] 和 [json2]:: reporter #3271D0",
    "skyhigh173JSON:在数组 [json] 中获取所有键[id]的值:: reporter #3271D0",
    "skyhigh173JSON:数组 [json] 设置长度为[2] :: reporter #3271D0",
    "skyhigh173JSON:使用分隔符[,]和文字[a,b,c]创建数组:: reporter #3271D0",
    "skyhigh173JSON:使用分隔符[,]连接数组 [a,b,c] :: reporter #3271D0",
    "skyhigh173JSON:转换列表 [list v] 到数组:: reporter #3271D0",
    "skyhigh173JSON:设置列表 [list v] 为数组 [1,2] :: command #3271D0",
    //ChatGPT
    "ChatGPT:询问 ChatGPT [你好！] :: reporter #0e0e0e ",
];